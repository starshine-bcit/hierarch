# put these in vault.yml
# fj_user:
# fj_pass:
# fj_secret_key:
# fj_internal_key:
fj_download_link: "https://codeberg.org/forgejo/forgejo/releases/download/v1.21.6-0/forgejo-1.21.6-0-linux-amd64"
fj_email: contact@hierarch.live
fj_version: "1.21.6-0-amd64"
fj_image: "codeberg.org/forgejo/forgejo"
fj_mailer_from: "noreply@hierarch.live"
fj_host: "git.hierarch.live"
fj_ssh_port: "1001"
fj_http_port: "7001"
smtp_port: "587"
smtp_host: "smtp.mailgun.org"
smtp_type: "smtp+starttls"
domain_name: app.hierarch.live
oidc_url: "https://admin.hierarch.live/realms/hierarch/.well-known/openid-configuration"
oidc_realm_url: "https://admin.hierarch.live/realms/hierarch"
oidc_id: forgejo
db_hostname: localhost
db_is_local: true
mx_host: "chat.hierarch.live"
db_databases:
  - name: forgejo
    user: "{{ fj_db_user }}"
    pass: "{{ fj_db_pass }}"
    schema: forgejo
    origin: "127.0.0.1"
    ipv6_origin: ""
    collate: ""
    public_schema: false
  - name: "{{ mx_db_name }}"
    user: "{{ mx_db_user }}"
    pass: "{{ mx_db_pass }}"
    schema: "{{ mx_db_name }}"
    origin: "127.0.0.1"
    ipv6_origin: ""
    collate: C
    public_schema: true
server_names:
  - "{{ fj_host }}"
admin_email: fey.sasha@gmail.com
certs:
  - domains:
      - "{{ domain_name }}"
      - "www.{{ domain_name }}"
      - "{{ fj_host }}"
      - "www.{{ fj_host }}"
      - "{{ mx_host }}"
      - "www.{{ mx_host }}"
      - "{{ wk_host }}"
      - "www.{{ wk_host }}"
stop_services:
  - nginx
upstreams_forgejo:
  - name: forgejo
    servers:
      - address: localhost:7001
upstreams_synapse:
  - name: synapse
    servers:
      - address: localhost:7002
upstreams_wiki:
  - name: wikijs
    servers:
      - address: localhost:7003
nginx_fj_locations:
  - location: /
    proxy:
      pass: http://forgejo
nginx_mx_locations:
  - location: '~ ^(/_matrix|/_synapse/client)'
    proxy:
      pass: http://synapse
  - location: /
    core:
      root: /usr/share/element-web
  - location: "= /.well-known/matrix/server"
    proxy:
      pass: http://synapse
  - location: "= /.well-known/matrix/client"
    rewrite:
      return:
        code: 200
        text: "'{\"m.homeserver\": {\"base_url\": \"https://{{ mx_host }}\"}}'"
    core:
      default_type: application/json
    headers:
      add_headers:
        - name: Access-Control-Allow-Origin
          value: '*'
          always: true
nginx_wk_locations:
  - location: /
    proxy:
      pass: http://wikijs
postgres_remote_cert_file: "/etc/letsencrypt/live/{{ domain_name }}-0001/cert.pem"
postgres_remote_key_file: "/etc/letsencrypt/live/{{ domain_name }}-0001/privkey.pem"
postgres_local_cert_file: /etc/postgresql/15/main/cert.pem
postgres_local_key_file: /etc/postgresql/15/main/privkey.pem
cert_file: "/etc/letsencrypt/live/{{ domain_name }}-0001/fullchain.pem"
cert_key: "/etc/letsencrypt/live/{{ domain_name }}-0001/privkey.pem"
servers_forgejo:
  - core:
      listen:
        - address: "0.0.0.0"
          port: 443
          default_server: false
          ssl: true
          http2: true
        - address: "[::]"
          port: 443
          default_server: false
          ssl: true
          http2: true
      server_name: "{{ fj_host }}"
    locations: "{{ nginx_fj_locations }}"
servers_synapse:
  - core:
      listen:
        - address: "0.0.0.0"
          port: 443
          default_server: false
          ssl: true
          http2: true
        - address: "[::]"
          port: 443
          default_server: false
          ssl: true
          http2: true
      server_name: "{{ mx_host }}"
    locations: "{{ nginx_mx_locations }}"
servers_wiki:
  - core:
      listen:
        - address: "0.0.0.0"
          port: 443
          default_server: false
          ssl: true
          http2: true
        - address: "[::]"
          port: 443
          default_server: false
          ssl: true
          http2: true
      server_name: "{{ wk_host }}"
    locations: "{{ nginx_wk_locations }}"
http_templates:
  - backup: true
    deployment_location: /etc/nginx/conf.d/default.conf
    config:
      ssl:
        certificate: "{{ cert_file }}"
        certificate_key: "{{ cert_key }}"
        ciphers:
          - HIGH
          - "!aNull"
          - "!MD5"
        conf_command: Protocol TLSv1.2
        prefer_server_ciphers: false
        protocols:
          - TLSv1.2
          - TLSv1.3
      proxy:
        set_header:
          - field: X-Forwarded-For
            value: $proxy_add_x_forwarded_for
          - field: X-Forwarded-Proto
            value: $scheme
          - field: X-Fowarded-Host
            value: $host
          - field: Host
            value: $http_host
          - field: User-Agent
            value: $http_user_agent
          - field: X-Real-IP
            value: $remote_addr
        buffering: false
      log:
        access:
          - path: /var/log/nginx/access.log
            format: main
            buffer: 1m
            gzip: 5
            flush: 10h
            if: $status
        format:
          - name: main
            format: |
              '$remote_addr - $remote_user [$time_local] "$request" '
              '$status $body_bytes_sent "$http_referer" '
              '"$http_user_agent" "$http_x_forwarded_for"'
        error_log:
          file: /var/log/nginx/error.log
          level: notice
        open_log_file_cache:
          max: 1000
          inactive: 20s
          min_uses: 2
          valid: 1m
      servers:
        - core:
            listen:
              - address: "0.0.0.0"
                port: 80
                default_server: true
                ssl: false
              - address: "[::]"
                port: 80
                default_server: true
                ssl: false
          rewrite:
            return:
              code: 301
              url: "https://$host$request_uri"
  - backup: true
    deployment_location: /etc/nginx/conf.d/forgejo.conf
    config:
      upstreams: "{{ upstreams_forgejo }}"
      servers: "{{ servers_forgejo }}"
  - backup: true
    deployment_location: /etc/nginx/conf.d/synapse.conf
    config:
      upstreams: "{{ upstreams_synapse }}"
      servers: "{{ servers_synapse }}"
  - backup: true
    deployment_location: /etc/nginx/conf.d/wiki.conf
    config:
      upstreams: "{{ upstreams_wiki }}"
      servers: "{{ servers_wiki }}"
nginx_confs:
  - /etc/nginx/conf.d/default.conf
  - /etc/nginx/conf.d/forgejo.conf
  - /etc/nginx/conf.d/synapse.conf
  - /etc/nginx/conf.d/wiki.conf
mx_config_dir: "/etc/matrix-synapse/conf.d"
mx_user: hr-synapse
mx_db_user: hrsynapse
mx_db_name: synapse
turn_allowed_peer_ip: "104.219.236.22"
wk_host: "wiki.hierarch.live"
wk_home_dir: "/srv/wikijs"
wk_base_dir: "{{ wk_home_dir }}/wiki"
