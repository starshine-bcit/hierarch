---
# these should be defined in vault.yml
# kc_db_user:
# kc_db_pass:
# kc_root_user:
# kc_root_pass:
# kc_admin_user:
# kc_admin_pass:
# mailcow_client_secret:
# begin normal vars
kc_db_name: keycloak
kc_db_origin: admin.hierarch.live
kc_realm_name: hierarch
kc_db_host: localhost
kc_public_hostname: admin.hierarch.live
kc_admin_url: https://admin.hierarch.live
kc_public_url: https://admin.hierarch.live
kc_hostname_path: "/"
kc_admin_hostname: admin.hierarch.live
kc_debug: true
kc_hostname_port: 7000
kc_http_port: 7000
kc_https_port: 7001
kc_http_host: "0.0.0.0"
kc_https_enabled: false
kc_proxy_mode: edge
domain_name: admin.hierarch.live
server_names:
  - "{{ domain_name }}"
admin_email: fey.sasha@gmail.com
certs:
  - domains:
      - "{{ domain_name }}"
      - "www.{{ domain_name }}"
stop_services:
  - nginx
  - keycloak
nginx_upstreams:
  - name: keycloak
    servers:
      - address: 127.0.0.1:7000
nginx_main_locations:
  - location: /admin # restrict
    proxy:
      pass: http://keycloak
  - location: /js # restrict
    proxy:
      pass: http://keycloak
  - location: /realms
    proxy:
      pass: http://keycloak
  - location: /resources
    proxy:
      pass: http://keycloak
  - location: /robots.txt
    proxy:
      pass: http://keycloak
cert_file: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
cert_key: "/etc/letsencrypt/live/{{ domain_name }}/privkey.pem"
postgres_remote_cert_file: "/etc/letsencrypt/live/{{ domain_name }}/cert.pem"
postgres_remote_key_file: "/etc/letsencrypt/live/{{ domain_name }}/privkey.pem"
postgres_local_cert_file: /etc/postgresql/15/main/cert.pem
postgres_local_key_file: /etc/postgresql/15/main/privkey.pem
kc_realm: hierarch
kc_admin_role: admin
kc_groups:
  - developer
  - manager
  - hr
  - it
  - user
mail_hostname: mail.hierarch.live
mail_url: "https://{{ mail_hostname }}"
servers:
  - core:
      listen:
        - address: "0.0.0.0"
          port: 80
          default_server: true
          ssl: false
        - address: "[::]"
          port: 80
          default_server: true
          ssl: false
    rewrite:
      return:
        code: 301
        url: "https://$host$request_uri"
  - core:
      listen:
        - address: "0.0.0.0"
          port: 443
          default_server: true
          ssl: true
          reuseport: true
          so_keepalive: true
        - address: "[::]"
          port: 443
          default_server: true
          ssl: true
          reuseport: true
          so_keepalive: true
      server_name: "{{ domain_name }}"
    locations: "{{ nginx_main_locations }}"
